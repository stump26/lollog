type SummonerDTO {
  id: String!
  profileIconId: Int!
  name: String!
  puuid: String!
  summonerLevel: Float!
  revisionDate: Float!
  accountId: String!
}
type MiniSeriesDTO {
  progress: String!
  losses: Int!
  target: Int!
  winss: Int!
}
type LeagueEntryDTO {
  leagueId: String!
  queueType: String!
  tier: String!
  rank: String!
  summonerId: String!
  summonerName: String!
  leaguePoints: Int!
  wins: Int!
  losses: Int!
  veteran: Boolean!
  inactive: Boolean!
  freshBlood: Boolean!
  hotStrak: Boolean!
  miniSeries: MiniSeriesDTO
}
type MatchReferenceDTO {
  platformId: String!
  gameId: Float!
  champion: Int!
  queue: Int!
  season: Int!
  timestamp: Float!
  lane: String!
  role: String!
}
type MatchlistDTO {
  matches: [MatchReferenceDTO]!
  totalGames: Int!
  startIndex: Int!
  endIndex: Int!
}
type CampionDTO {
  version: String!
  id: String!
  key: Int!
  name: String!
  title: String!
  blurb: String!
  info: champinonInfo
  image: championImage!
  tags: [String]!
  partype: String!
  stats: championDetailStats
}
type championImage {
  full: String!
  sprite: String!
  group: String!
  x: Int!
  y: Int!
  w: Int!
  h: Int!
}
type champinonInfo {
  attack: Int!
  defense: Int!
  magic: Int!
  difficulty: Int!
}
type championDetailStats {
  hp: Float!
  hpperlevel: Int!
  mp: Float!
  mpperlevel: Int!
  movespeed: Int!
  armor: Float!
  armorperlevel: Float!
  spellblock: Float!
  spellblockperlevel: Float!
  attackrange: Int!
  hpregen: Float!
  hpregenperlevel: Float!
  mpregen: Float!

  mpregenperlevel: Float!
  crit: Int!
  critperlevel: Int!
  attackdamage: Float!
  attackdamageperlevel: Float!
  attackspeedoffset: Float!
  attackspeedperlevel: Float!
}
type Query {
  getSummonerDTO(summonerName: String!): SummonerDTO!
  getLeagueEntryDTO(encryptedSummonerId: String!): [LeagueEntryDTO]
  getMatchlistDTO(
    encryptedAccountId: String!
    from: Int
    to: Int
  ): MatchlistDTO!
  getCampionDTO(championId: Int!): CampionDTO!
}
